#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:/data/projects/EDK11Trunk/system.xmp
#
# WARNING : This file will be re-generated every time a command
# to run a make target is invoked. So, any changes made to this  
# file manually, will be lost when make is invoked next. 
#################################################################

XILINX_EDK_DIR = /opt/Xilinx/11.1/EDK
NON_CYG_XILINX_EDK_DIR = /opt/Xilinx/11.1/EDK

SYSTEM = system

MHSFILE = system.mhs

MSSFILE = system.mss

FPGA_ARCH = virtex4

DEVICE = xc4vfx20ff672-10

LANGUAGE = vhdl

SEARCHPATHOPT = 
GLOBAL_SEARCHPATHOPT = 

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT) -msg __xps/ise/xmsgprops.lst

LIBGEN_OPTIONS = -mhs $(MHSFILE) -p $(DEVICE) $(SEARCHPATHOPT) -msg __xps/ise/xmsgprops.lst

OBSERVE_PAR_OPTIONS = -error yes

ROBOTRACERS_OUTPUT_DIR = RobotRacers
ROBOTRACERS_OUTPUT = $(ROBOTRACERS_OUTPUT_DIR)/executable.elf

TESTAPP_SDRAM_OUTPUT_DIR = TestApp_SDRAM
TESTAPP_SDRAM_OUTPUT = $(TESTAPP_SDRAM_OUTPUT_DIR)/executable.elf

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

PPC405_0_BOOTLOOP = $(BOOTLOOP_DIR)/ppc405_0.elf

BRAMINIT_ELF_FILES =  $(ROBOTRACERS_OUTPUT) 
BRAMINIT_ELF_FILE_ARGS =   -pe ppc405_0 $(ROBOTRACERS_OUTPUT) 

ALL_USER_ELF_FILES = $(ROBOTRACERS_OUTPUT) $(TESTAPP_SDRAM_OUTPUT) 

SIM_CMD = vsim

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM)_setup.do

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM)_setup.do

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM)_setup.do

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

MIX_LANG_SIM_OPT = -mixed yes

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(BRAMINIT_ELF_FILE_ARGS) $(MIX_LANG_SIM_OPT) -msg __xps/ise/xmsgprops.lst -s mti -tb


LIBRARIES =  \
       ppc405_0/lib/libxil.a 

LIBSCLEAN_TARGETS = ppc405_0_libsclean 

PROGRAMCLEAN_TARGETS = RobotRacers_programclean TestApp_SDRAM_programclean 

CORE_STATE_DEVELOPMENT_FILES = 

WRAPPER_NGC_FILES = implementation/ppc405_0_wrapper.ngc \
implementation/plb_wrapper.ngc \
implementation/xps_bram_if_cntlr_1_wrapper.ngc \
implementation/plb_bram_if_cntlr_1_bram_wrapper.ngc \
implementation/serial_uart_wrapper.ngc \
implementation/wireless_uart_wrapper.ngc \
implementation/clock_generator_0_wrapper.ngc \
implementation/jtagppc_cntlr_inst_wrapper.ngc \
implementation/proc_sys_reset_0_wrapper.ngc \
implementation/xps_intc_0_wrapper.ngc \
implementation/plb_quad_encoder_0_wrapper.ngc \
implementation/plb_pwm_ctrl_0_wrapper.ngc \
implementation/xps_gpio_0_wrapper.ngc \
implementation/xps_mch_emc_flash_wrapper.ngc \
implementation/xps_mch_emc_sram_wrapper.ngc \
implementation/dcm_module_0_wrapper.ngc \
implementation/plb_usb_0_wrapper.ngc \
implementation/plb_vision_0_wrapper.ngc \
implementation/mpmc_0_wrapper.ngc \
implementation/dcm_2_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

XPLORER_DEPENDENCY = __xps/xplorer.opt
XPLORER_OPTIONS = -p $(DEVICE) -uc $(SYSTEM).ucf -bm $(SYSTEM).bmm -max_runs 7

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(XFLOW_DEPENDENCY)

SDK_EXPORT_DIR = SDK/SDK_Export/hw
SYSTEM_HW_HANDOFF = $(SDK_EXPORT_DIR)/$(SYSTEM).xml
SYSTEM_HW_HANDOFF_BIT = $(SDK_EXPORT_DIR)/$(SYSTEM).bit
SYSTEM_HW_HANDOFF_BMM = $(SDK_EXPORT_DIR)/$(SYSTEM)_bd.bmm
SYSTEM_HW_HANDOFF_DEP = $(SYSTEM_HW_HANDOFF) $(SYSTEM_HW_HANDOFF_BIT) $(SYSTEM_HW_HANDOFF_BMM)

#################################################################
# SOFTWARE APPLICATION ROBOTRACERS
#################################################################

ROBOTRACERS_SOURCES = code/Vision/BufferStore.c code/Vision/FrameTable.c code/DataTypes/Queue.c code/DataTypes/Stack.c code/Common/State.c code/Common/Timer.c code/Common/Flash.c code/Common/HeliosIO.c code/Common/LoopScheduler.c code/main.c code/init.c code/Communcations/ISR.c code/Communcations/Comm.c code/Communcations/Packet.c code/Common/mpmc_calibration.c code/Common/mpmc_mem_test_example.c 

ROBOTRACERS_HEADERS = code/Vision/BufferStore.h code/Vision/FrameTable.h code/DataTypes/Queue.h code/DataTypes/Stack.h code/Common/State.h code/Common/Timer.h code/Common/Header.h code/Common/HeliosIO.h code/Common/InterruptControl.h code/Common/LoopScheduler.h code/init.h code/Communcations/ISR.h code/Communcations/Comm.h code/Communcations/Packet.h code/Common/Flash.h code/Common/mpmc_calibration.h code/Common/mpmc_mem_test_example.h 

ROBOTRACERS_CC = powerpc-eabi-gcc
ROBOTRACERS_CC_SIZE = powerpc-eabi-size
ROBOTRACERS_CC_OPT = -O2
ROBOTRACERS_CFLAGS = 
ROBOTRACERS_CC_SEARCH = # -B
ROBOTRACERS_LIBPATH = -L./ppc405_0/lib/ # -L
ROBOTRACERS_INCLUDES = -I./ppc405_0/include/  -Icode/Vision/ -Icode/DataTypes/ -Icode/Common/ -Icode/ -Icode/Communcations/ # -I
ROBOTRACERS_LFLAGS = # -l
ROBOTRACERS_LINKER_SCRIPT = 
ROBOTRACERS_LINKER_SCRIPT_FLAG = #-Wl,-T -Wl,$(ROBOTRACERS_LINKER_SCRIPT) 
ROBOTRACERS_CC_DEBUG_FLAG =  -g 
ROBOTRACERS_CC_PROFILE_FLAG = # -pg
ROBOTRACERS_CC_GLOBPTR_FLAG= # -msdata=eabi
ROBOTRACERS_CC_INFERRED_FLAGS= 
ROBOTRACERS_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
ROBOTRACERS_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
ROBOTRACERS_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
ROBOTRACERS_OTHER_CC_FLAGS= $(ROBOTRACERS_CC_GLOBPTR_FLAG)  \
                  $(ROBOTRACERS_CC_START_ADDR_FLAG) $(ROBOTRACERS_CC_STACK_SIZE_FLAG) $(ROBOTRACERS_CC_HEAP_SIZE_FLAG)  \
                  $(ROBOTRACERS_CC_INFERRED_FLAGS)  \
                  $(ROBOTRACERS_LINKER_SCRIPT_FLAG) $(ROBOTRACERS_CC_DEBUG_FLAG) $(ROBOTRACERS_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TESTAPP_SDRAM
#################################################################

TESTAPP_SDRAM_SOURCES = code/Common/MemoryTest.c code/Common/Serial.c TestApp_SDRAM/mpmc_calibration_example.c TestApp_SDRAM/TestApp_SDRAM.c TestApp_SDRAM/mpmc_mem_test_example.c 

TESTAPP_SDRAM_HEADERS = code/Common/SystemTypes.h code/Common/MemoryTest.h code/Common/Serial.h TestApp_SDRAM/mpmc_calibration_example.h TestApp_SDRAM/mpmc_mem_test_example.h 

TESTAPP_SDRAM_CC = powerpc-eabi-gcc
TESTAPP_SDRAM_CC_SIZE = powerpc-eabi-size
TESTAPP_SDRAM_CC_OPT = -O2
TESTAPP_SDRAM_CFLAGS = 
TESTAPP_SDRAM_CC_SEARCH = # -B
TESTAPP_SDRAM_LIBPATH = -L./ppc405_0/lib/ # -L
TESTAPP_SDRAM_INCLUDES = -I./ppc405_0/include/  -Icode/Common/ -ITestApp_SDRAM/ # -I
TESTAPP_SDRAM_LFLAGS = # -l
TESTAPP_SDRAM_LINKER_SCRIPT = 
TESTAPP_SDRAM_LINKER_SCRIPT_FLAG = #-Wl,-T -Wl,$(TESTAPP_SDRAM_LINKER_SCRIPT) 
TESTAPP_SDRAM_CC_DEBUG_FLAG =  -g 
TESTAPP_SDRAM_CC_PROFILE_FLAG = # -pg
TESTAPP_SDRAM_CC_GLOBPTR_FLAG= # -msdata=eabi
TESTAPP_SDRAM_CC_INFERRED_FLAGS= 
TESTAPP_SDRAM_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
TESTAPP_SDRAM_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
TESTAPP_SDRAM_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
TESTAPP_SDRAM_OTHER_CC_FLAGS= $(TESTAPP_SDRAM_CC_GLOBPTR_FLAG)  \
                  $(TESTAPP_SDRAM_CC_START_ADDR_FLAG) $(TESTAPP_SDRAM_CC_STACK_SIZE_FLAG) $(TESTAPP_SDRAM_CC_HEAP_SIZE_FLAG)  \
                  $(TESTAPP_SDRAM_CC_INFERRED_FLAGS)  \
                  $(TESTAPP_SDRAM_LINKER_SCRIPT_FLAG) $(TESTAPP_SDRAM_CC_DEBUG_FLAG) $(TESTAPP_SDRAM_CC_PROFILE_FLAG) 
