#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:G:\matt\RobotRacer\RobotRacers\system.xmp
#################################################################

XILINX_EDK_DIR = C:/EDK

SYSTEM = system

MHSFILE = system.mhs

MSSFILE = system.mss

FPGA_ARCH = virtex4

DEVICE = xc4vfx20ff672-10

LANGUAGE = verilog

SEARCHPATHOPT = 

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT)

LIBGEN_OPTIONS = -mhs $(MHSFILE) -p $(DEVICE) $(SEARCHPATHOPT)

VPGEN_OPTIONS = -p $(DEVICE) $(SEARCHPATHOPT)

ECEN490_OUTPUT_DIR = G:/matt/RobotRacer/RobotRacers
ECEN490_OUTPUT = $(ECEN490_OUTPUT_DIR)/executable.elf

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

PPC405_0_BOOTLOOP = $(BOOTLOOP_DIR)/ppc405_0.elf

BRAMINIT_ELF_FILES =  $(ECEN490_OUTPUT) 
BRAMINIT_ELF_FILE_ARGS =   -pe ppc405_0 $(ECEN490_OUTPUT) 

ALL_USER_ELF_FILES = $(ECEN490_OUTPUT) 

SIM_CMD = vsim

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM).do

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM).do

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM).do

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

MIX_LANG_SIM_OPT = -mixed yes

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT) $(BRAMINIT_ELF_FILE_ARGS) $(MIX_LANG_SIM_OPT)  -s mti -X c:/simlib/EDK8.1.02_mti_se_nt/ISE_Lib/ -E c:/simlib/EDK8.1.02_mti_se_nt/EDK_Lib/


LIBRARIES =  \
       ppc405_0/lib/libxil.a 
VPEXEC = virtualplatform/vpexec.exe

LIBSCLEAN_TARGETS = ppc405_0_libsclean 

PROGRAMCLEAN_TARGETS = ECEn490_programclean 

CORE_STATE_DEVELOPMENT_FILES = G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\org_frame_fifo.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\org_frame_fifo_fifo_generator_v2_1_as_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\org_frame_fifo_fifo_generator_v2_1_as_1_blkmemdp_v6_2_xst.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\seg_frame_fifo.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\seg_frame_fifo_fifo_generator_v2_1_as_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\seg_frame_fifo_fifo_generator_v2_1_as_1_blkmemdp_v6_2_xst.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\hfdfifo.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\hfdfifo_fifo_generator_v2_1_ss_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\hfdfifo_fifo_generator_v2_1_ss_1_blkmemdp_v6_2_xst.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\netlist\sqrt.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_17.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_17_fifo_generator_v2_2_xst_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_16.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_16_fifo_generator_v2_2_xst_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_9.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_9_fifo_generator_v2_2_xst_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_8.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\usb_fifo_8_fifo_generator_v2_2_xst_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\plb_burst_fifo.edn \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\plb_burst_fifo_fifo_generator_v2_1_as_1.ngc \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\netlist\plb_burst_fifo_fifo_generator_v2_1_as_1_blkmemdp_v6_2_xst.edn \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\proc_common_pkg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\family.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\or_muxcy.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\or_gate.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\pselect.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\valid_be.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\ld_arith_reg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\ld_arith_reg2.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\down_counter.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\inferred_lut4.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\srl_fifo.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\proc_common_v1_00_b\hdl\vhdl\srl_fifo2.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\ipif_pkg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\ipif_steer.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\interrupt_control.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\dma_sg_pkg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\dma_sg_cmp.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\ctrl_reg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\burst_size_calc.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\dma_sg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\ipif_common_v1_00_e\hdl\vhdl\dma_sg_sim.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\dre_v1_00_a\hdl\vhdl\dre_support.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\dre_v1_00_a\hdl\vhdl\dre_64_top.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_counter_bit.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_counter.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_counter_top.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_occ_counter.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_occ_counter_top.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_adder_bit.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_adder.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_dpram_select.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\srl16_fifo.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\pf_dly1_mux.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\rdpfifo_dp_cntl.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\ipif_control_rd.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\rdpfifo_top.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\ipif_control_wr_dre.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\wrpfifo_dp_cntl.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\wrpfifo_top.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\addr_reg_cntr_brst.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\address_decoder.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\determinate_timer.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\plb_slave_attach_dtime_dma.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\master_attachment.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\plb_sesr_sear.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\ipif_reset.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\plb_dma_sg.vhd \
C:\EDK\hw\XilinxProcessorIPLib\pcores\plb_ipif_v2_01_a\hdl\vhdl\plb_ipif.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\plb_camera.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\user_logic.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\cam_ser.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\frame_sync.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\size_buffer.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\size_buffer_onebit.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\line_buffer.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\convolution.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\conv_buffer.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\camera_rgb.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\hsv_conv.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\inv_table.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\segment_buffer.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\segmentation.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\threshold.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_camera\hdl\vhdl\hsv_buffer.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\hdl\vhdl\usb_core.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\hdl\vhdl\user_logic.vhd \
G:\matt\RobotRacer\RobotRacers\pcores\plb_usb_v1_00_d\hdl\vhdl\plb_usb.vhd

WRAPPER_NGC_FILES = implementation/ppc405_0_wrapper.ngc \
implementation/jtagppc_cntlr_0_wrapper.ngc \
implementation/proc_sys_reset_0_wrapper.ngc \
implementation/dcm_0_wrapper.ngc \
implementation/dcm_2_wrapper.ngc \
implementation/dcm_usb_wrapper.ngc \
implementation/plb_v34_0_wrapper.ngc \
implementation/plb_sdram_0_wrapper.ngc \
implementation/plb_bram_if_cntlr_0_wrapper.ngc \
implementation/bram_block_0_wrapper.ngc \
implementation/plb_cam0_wrapper.ngc \
implementation/plb_usb_0_wrapper.ngc \
implementation/plb2opb_bridge_0_wrapper.ngc \
implementation/opb_v20_0_wrapper.ngc \
implementation/opb2plb_bridge_0_wrapper.ngc \
implementation/opb_uart_serial_wrapper.ngc \
implementation/opb_uart_wireless_wrapper.ngc \
implementation/opb_gpio_helios_wrapper.ngc \
implementation/opb_pwm_wrapper.ngc \
implementation/opb_encoder_wrapper.ngc \
implementation/opb_intc_0_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(BITGEN_UT_FILE) $(XFLOW_DEPENDENCY)

#################################################################
# SOFTWARE APPLICATION ECEN490
#################################################################

ECEN490_SOURCES = code/bootloader/bootloader.c code/bootloader/srec.c code/ECEn490/FrameTable.c code/ECEn490/HeliosIO.c code/ECEn490/Init.c code/ECEn490/InterruptHandlers.c code/ECEn490/main.c code/ECEn490/MemAlloc.c code/ECEn490/navigation.c code/ECEn490/Packet.c code/ECEn490/pidControl.c code/ECEn490/Registers.c code/ECEn490/RX.c code/ECEn490/ServoControl.c code/ECEn490/State.c code/ECEn490/Timer.c code/ECEn490/TX.c code/ECEn490/Vision.c code/ECEn490/Wireless.c 

ECEN490_HEADERS = code/bootloader/bootloader.h code/bootloader/errors.h code/bootloader/srec.h code/ECEn490/FrameTable.h code/ECEn490/HeliosIO.h code/ECEn490/Init.h code/ECEn490/InterruptControl.h code/ECEn490/InterruptHandlers.h code/ECEn490/MemAlloc.h code/ECEn490/navigation.h code/ECEn490/Packet.h code/ECEn490/pidControl.h code/ECEn490/Registers.h code/ECEn490/RX.h code/ECEn490/ServoControl.h code/ECEn490/State.h code/ECEn490/SystemTypes.h code/ECEn490/Timer.h code/ECEn490/TX.h code/ECEn490/Vision.h code/ECEn490/Wireless.h 

ECEN490_CC = powerpc-eabi-gcc
ECEN490_CC_SIZE = powerpc-eabi-size
ECEN490_CC_OPT = -Os
ECEN490_CFLAGS = -Wall -ffunction-sections -fdata-sections
ECEN490_CC_SEARCH = # -B
ECEN490_LIBPATH = -L./ppc405_0/lib/ # -L
ECEN490_INCLUDES = -I./ppc405_0/include/  -Icode/bootloader/ -Icode/ECEn490/ # -I
ECEN490_LFLAGS = # -l
ECEN490_CC_PREPROC_FLAG = # -Wp,
ECEN490_CC_ASM_FLAG = # -Wa,
ECEN490_CC_LINKER_FLAG =   -Wl,--gc-sections 
ECEN490_LINKER_SCRIPT = ECEn490_linker_script.ld
ECEN490_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(ECEN490_LINKER_SCRIPT) 
ECEN490_CC_DEBUG_FLAG = # -[g|gstabs]
ECEN490_CC_PROFILE_FLAG = # -pg
ECEN490_CC_GLOBPTR_FLAG= # -msdata=eabi
ECEN490_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_START_ADDR=
ECEN490_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
ECEN490_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
ECEN490_OTHER_CC_FLAGS= $(ECEN490_CC_GLOBPTR_FLAG)  \
                  $(ECEN490_CC_START_ADDR_FLAG) $(ECEN490_CC_STACK_SIZE_FLAG) $(ECEN490_CC_HEAP_SIZE_FLAG)  \
                  $(ECEN490_CC_PREPROC_FLAG) $(ECEN490_CC_ASM_FLAG) $(ECEN490_CC_LINKER_FLAG)  \
                  $(ECEN490_LINKER_SCRIPT_FLAG) $(ECEN490_CC_DEBUG_FLAG) $(ECEN490_CC_PROFILE_FLAG) 
